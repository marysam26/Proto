@model Proto2.Areas.Student.Models.SubmissionView
<!DOCTYPE html>

@{
    ViewBag.Title = "Write";
}

<html>
<head runat="server">
    <meta charset="utf-8">
    <meta name="viewports" content="noindex, nofollow">
    <script src="//cdn.ckeditor.com/4.4.5/full/ckeditor.js"></script>
</head>
<body style="
        background-image: url(http://encs.vancouver.wsu.edu/~k.gonzalez/letters3.50.jpg);
        background-repeat: no-repeat;
        background-size: cover">
    <center><h2>@Model.AssignmentName</h2></center>
    <p></p>
    <center><h3>@Model.Description</h3></center>
    <br>
    <div class="pull-right">
        <p>
        <button type="button" class="btn btn-success pull-right" onclick="location.href='@Url.Action("CurrentAssignment", "StudentHome", new { Id = Model.AssignmentId })';return false;">&nbsp;Return</button>&nbsp;&nbsp;
        </p>   
    </div>
    <div class="form-group">
        <form method="post">
            <input type="submit" value="Submit" class="btn btn-primary" />
            @Html.TextAreaFor(s => s.Story, new { @id = "editor1", @value = Model.Story })
            @Html.TextBoxFor(s => s.Id, new { @Value = Model.Id, @type = "hidden" })
            <!--<textarea style="text-align:center" cols="80" id="editor1" name="editor1" rows="10"></textarea>-->
            
            <script>
                CKEDITOR.replace('editor1', {
                    width: '100%',
                    height: 400,
                    contentsCss: "body{background: url(http://encs.vancouver.wsu.edu/~t.roper/paper.jpg) no-repeat; background-size: cover;}",
                    toolbar: [
                        { name: 'document', groups: ['mode', 'document', 'doctools'], items: ['Save', 'NewPage'] },
                        { name: 'clipboard', groups: ['clipboard', 'undo'], items: ['Cut', 'Copy', 'Paste', '-', 'Undo', 'Redo'] },
                        { name: 'editing', groups: ['find', 'selection'], items: ['Find', '-', 'SelectAll', '-'] },
                        { name: 'insert', items: ['Image', 'Table', 'HorizontalRule', 'SpecialChar', 'PageBreak'] },
                        { name: 'paragraph', groups: ['list', 'indent', 'blocks', 'align', 'bidi'], items: ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'Blockquote', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock', '-', 'BidiLtr', 'BidiRtl'] },
                        '/',
                        { name: 'basicstyles', groups: ['basicstyles', 'cleanup'], items: ['Bold', 'Italic', 'Underline', 'Strike', 'Subscript', 'Superscript', '-', 'RemoveFormat'] },
                        { name: 'styles', items: ['Styles', 'Format', 'Font', 'FontSize'] },
                        { name: 'colors', items: ['TextColor', 'BGColor'] },
                        { name: 'tools', items: ['Maximize', 'ShowBlocks'] },
                        { name: 'others', items: ['-'] },
                    ]
                });

                var editor = CKEDITOR.replace('editor1');
                // The "save" event is fired whenever a change is made in the editor.
                editor.on('save', function (evt) {
                    // getData() returns CKEditor's HTML content.
                    var data = evt.editor.getData();
                    // Save data
                });

                // The "change" event is fired whenever a change is made in the editor.
                editor.on('change', function (evt) {
                    // getData() returns CKEditor's HTML content.
                    var data = evt.editor.getData();
                    // Save data
                });
            </script>
        </form>
    </div>
</body>
</html>